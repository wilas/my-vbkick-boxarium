cpu_count=1
memory_size=512
disk_size=(10140)
disk_format="vdi"
video_memory_size=10
hostiocache="on"
vm_options=("ioapic:on")
os_type_id="Debian_64"
guest_additions_attach=1
boot_file="%SRCPATH%/debian-unstable-amd64-netinst-mini.iso"
#boot_file="%SRCPATH%/debian-testing-amd64-netinst.iso"
boot_file_src_path="iso"
boot_file_src="http://cdimage.debian.org/debian/dists/unstable/main/installer-amd64/current/images/netboot/mini.iso"
boot_file_src_sha256="a9547a7f5250d03c078ad64a2ccdaa8bdc2ae1f1f4076bd6ee37ffe55b583090"
#boot_file_src="http://cdimage.debian.org/cdimage/weekly-builds/amd64/iso-cd/debian-testing-amd64-netinst.iso"
#boot_file_src_sha256="a4f989d1c3c69e702a7bf29101316cad3f3c8f23e70060b700d9738c8de1f7aa"
#boot_file_src="http://cdimage.debian.org/cdimage/daily-builds/daily/arch-latest/amd64/iso-cd/debian-testing-amd64-netinst.iso"
#boot_file_src_sha256="ac0faa15e7946a9cc10c2029c341cd266c336414db2c6f883f349267d14c1258"
boot_wait=10
boot_cmd_sequence=(
    "<Esc>"
    "install " 
#   "preseed/url=http://%IP%:%PORT%/kickstart/debian-testing-noarch-noX.cfg "
    "preseed/url=http://%IP%:%PORT%/kickstart/debian-unstable-noarch-noX.cfg "
    "debian-installer=en_US auto locale=en_US "
    "kbd-chooser/method=us netcfg/get_hostname=vagrant netcfg/get_domain=vagrantup.com fb=false debconf/frontend=noninteractive "
    "console-setup/ask_detect=false console-keymaps-at/keymap=us keyboard-configuration/xkb-keymap=us <Enter>"
)
kickstart_port=7124
kickstart_timeout=7200
ssh_host_port=2224
ssh_user="vagrant"
ssh_priv_key="vagrant_key"
ssh_priv_key_src="https://raw.github.com/mitchellh/vagrant/master/keys/vagrant"
postinstall_launch=(
#   "sudo bash postinstall/unstable.sh"
#   "%HOST% sleep 20"    
    "cd postinstall && sudo bash base.sh"
    "cd postinstall && sudo bash sudo.sh"
    "cd postinstall && sudo bash virtualbox.sh"
    "cd postinstall && sudo bash ruby.sh"
    "cd postinstall && sudo bash ansible.sh"
    "cd postinstall && sudo bash puppet.sh"
    "cd postinstall && sudo bash chef.sh"
    "cd postinstall && sudo bash nfs.sh"
    "cd postinstall && sudo bash tuning.sh"
#   "sudo bash postinstall/docker_binary.sh"
    "sudo bash postinstall/docker_source.sh"
#   "sudo bash postinstall/docker_ub.sh"
    "%HOST% sleep 20"
    "cd postinstall && sudo bash cleanup.sh"
    "cd postinstall && sudo bash zerodisk.sh"
)
postinstall_transport=("postinstall")
validate_launch=("cd validate && bash adm_features.sh adm_context_docker.txt")
validate_transport=("validate")
update_launch=(
    "sudo bash virtualbox.sh"
    "sudo bash -c 'apt-get -y update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get -y clean'"
)
update_transport=("postinstall/virtualbox.sh")
clean_transported=0
shutdown_cmd="sudo /sbin/halt -h -p"
shutdown_timeout=20
files_to_autoupdate_vbox_version=("validate/adm_envrc")
