# helpful functions
function get_debian_testing_weekly_sha256 {
    local arch="${1}"
    local base_url="http://cdimage.debian.org/cdimage/weekly-builds/${arch}/iso-cd/"
    local check_sum=$(curl -ks "${base_url}/SHA256SUMS" | grep "${arch}-netinst" | cut -d" " -f 1)
    printf "${check_sum}"
}
function get_debian_testing_daily_sha256 {
    local arch="${1}"
    local base_url="http://cdimage.debian.org/cdimage/daily-builds/daily/arch-latest/${arch}/iso-cd/"
    local check_sum=$(curl -ks "${base_url}/SHA256SUMS.small" | grep "${arch}-netinst" | cut -d" " -f 1)
    printf "${check_sum}"
}

cpu_count=1
memory_size=512
disk_size=(10140)
disk_format="vdi"
video_memory_size=10
hostiocache="on"
vm_options=("ioapic:on")
os_type_id="Debian_64"
guest_additions_attach=1
boot_file_src_path="iso"
boot_file_checksum_type="sha256"
boot_file="%SRCPATH%/debian-testing-amd64-netinst.iso"
boot_file_src="http://cdimage.debian.org/cdimage/weekly-builds/amd64/iso-cd/debian-testing-amd64-netinst.iso"
boot_file_src_checksum=$(get_debian_testing_weekly_sha256 "amd64")
#boot_file_src="http://cdimage.debian.org/cdimage/daily-builds/daily/arch-latest/amd64/iso-cd/debian-testing-amd64-netinst.iso"
#boot_file_src_checksum=$(get_debian_testing_daily_sha256 "amd64")
boot_wait=10
boot_cmd_sequence=(
    "<Esc>"
    "install " 
    "auto=true priority=critical "
    "url=http://%IP%:%PORT%/kickstart/debian-testing-noarch-noX.cfg "
    "hostname=vagrant domain=lan "
    "<Enter>"
)
kickstart_port=7124
kickstart_timeout=7200
ssh_host_port=2224
ssh_user="vagrant"
ssh_priv_key="vagrant_key"
ssh_priv_key_src="https://raw.github.com/mitchellh/vagrant/master/keys/vagrant"
postinstall_launch=(
    "sudo bash postinstall/base.sh"
    "sudo bash postinstall/sudo.sh"
    "sudo bash postinstall/virtualbox.sh"
    "sudo bash postinstall/ruby.sh"
    "sudo bash postinstall/ansible.sh"
    "sudo bash postinstall/puppet.sh"
    "sudo bash postinstall/chef.sh"
    "sudo bash postinstall/cfengine.sh"
    "sudo bash postinstall/nfs.sh"
#    "sudo bash postinstall/docker_binary.sh"
    "sudo bash postinstall/docker_source.sh"
#    "sudo bash postinstall/docker_ub.sh" 
    "sudo bash postinstall/cleanup.sh" 
    "sudo bash postinstall/zerodisk.sh" 
    "sudo reboot"
    "%HOST% sleep 20"
)
postinstall_transport=("postinstall")
validate_launch=("cd validate && bash adm_features.sh adm_context_docker.txt")
validate_transport=("validate")
update_launch=(
    "sudo bash virtualbox.sh"
    "sudo bash -c 'apt-get -y update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get -y clean'"
)
update_transport=("postinstall/virtualbox.sh")
clean_transported=1
shutdown_cmd="sudo /sbin/halt -h -p"
shutdown_timeout=20
files_to_autoupdate_vbox_version=("validate/adm_envrc")
