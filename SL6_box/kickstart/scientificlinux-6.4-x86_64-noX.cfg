# Locale
lang en_US.UTF-8
keyboard pl2
timezone UTC

# Authentication
## Sets up the authentication options - use shadow passwords, use md5 encryption for user passwords
authconfig --enableshadow --enablemd5
## Sets the system's root password 
rootpw vagrant

# Kickstart
## Fresh install, not an upgrade
install
## Specify install source - install via HTTP, more SL urls here: http://www.scientificlinux.org/download/mirrors
url --url=http://ftp1.scientificlinux.org/linux/scientific/6.4/x86_64/os/
## Disk Partitioning - how the boot loader should be installed, delete all partitions/mbr, then create new layout
bootloader --location=mbr
zerombr
clearpart --all --initlabel
autopart
## Firstboot - the druid that helps you to set up the system after install - disabled
firstboot --disabled
## Don't use GUI
text
## Don't configure X
skipx
## Reboot the machine after the install
reboot
## Configure NICs - use dhcp
network --bootproto dhcp --hostname=vagrant
## Firewall - enable and open ssh port
firewall --enabled --service=ssh
## Selinux - disable
selinux --disabled
## Add some repos for build additional packages
repo --name=epel --mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&arch=x86_64 --includepkgs='dkms,tmux'

%packages
## Add basic packages
@core
wget
curl
sudo
gcc
gcc-c++
bzip2
make
kernel-devel
dkms
## Add extra packages
openssh-clients
vim
mc
git
tmux
## Remove some packages
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
%end

%post
/usr/bin/yum -y upgrade

BOX_TYPE="vbox_lazy"
ADM_PATH=/var/tmp

# consider removing the case block and choose method which work for you
case $BOX_TYPE in
    "vbox")
        # injection postinstall method - inject postinstall code into VM
        # download postinstall scripts
        wget -P $ADM_PATH -o $ADM_PATH/adm_wget.log -dr -nH 10.0.2.2:7122/postinstall
        # fire adm_postinstall script
        cd $ADM_PATH/postinstall && bash adm_postinstall.sh
        ;;
    "vbox_lazy")
        # lazy postinstall method - run postinstall scripts later via ssh
        # create vagrant user and group
        /usr/sbin/groupadd vagrant
        /usr/sbin/useradd vagrant -g vagrant -G wheel -d /home/vagrant -c "Vagrant box user"
        # set password
        echo "vagrant" | passwd --stdin vagrant
        # give sudo access (grants all permissions to user vbkick)
        echo "vagrant ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/vagrant
        chmod 0440 /etc/sudoers.d/vagrant
        # add vagrant's public key - user can ssh without password
        mkdir -pm 700 ~vagrant/.ssh
        wget -O ~vagrant/.ssh/authorized_keys --no-check-certificate https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub
        chmod 0600 ~vagrant/.ssh/authorized_keys
        chown -R vagrant:vagrant ~vagrant/.ssh
        ;;
    "kvm")
        #wget -P $ADM_PATH -o $ADM_PATH/adm_wget.log -dr -nH GIVE_ME_URL/postinstall
        ;;
    "ec2")
        #wget -P $ADM_PATH -o $ADM_PATH/adm_wget.log -dr -nH GIVE_ME_URL/postinstall
        ;;
    "vmware")
        #wget -P $ADM_PATH -o $ADM_PATH/adm_wget.log -dr -nH GIVE_ME_URL/postinstall
        ;;
    "hardware")
        # before kickstarting place postinstall directory into usb_stick and update ADM_PATH
        ;;
    "custom")
        # the only limit is your imagination
        ;;
    *)
        ;;
esac

%end
