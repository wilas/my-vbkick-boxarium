# helpful functions
function get_debian_unstable_mini_md5 {
    local arch="${1}"
    local base_url="http://cdimage.debian.org/debian/dists/unstable/main/installer-${arch}/current/images"
    local check_sum=$(curl -ks "${base_url}/MD5SUMS" | grep "netboot/mini.iso" | cut -d" " -f 1)
    printf "${check_sum}"
}
function get_debian_testing_weekly_md5 {
    local arch="${1}"
    local base_url="http://cdimage.debian.org/cdimage/weekly-builds/${arch}/iso-cd/"
    local check_sum=$(curl -ks "${base_url}/MD5SUMS" | grep "${arch}-netinst" | cut -d" " -f 1)
    printf "${check_sum}"
}
function get_debian_testing_daily_md5 {
    local arch="${1}"
    local base_url="http://cdimage.debian.org/cdimage/daily-builds/daily/arch-latest/${arch}/iso-cd/"
    local check_sum=$(curl -ks "${base_url}/MD5SUMS.small" | grep "${arch}-netinst" | cut -d" " -f 1)
    printf "${check_sum}"
}

cpu_count=1
memory_size=512
disk_size=(10140)
disk_format="vdi"
video_memory_size=10
hostiocache="on"
vm_options=("ioapic:on")
nic_type="virtio"
os_type_id="Debian_64"
guest_additions_attach=1
boot_file_src_path="iso"
boot_file_checksum_type="md5"
#boot_file="%SRCPATH%/debian-unstable-amd64-netinst-mini.iso"
#boot_file_src="http://cdimage.debian.org/debian/dists/sid/main/installer-amd64/current/images/netboot/mini.iso"
#boot_file_src_checksum=$(get_debian_unstable_mini_md5 "amd64")
boot_file="%SRCPATH%/debian-testing-amd64-netinst.iso"
boot_file_src="http://cdimage.debian.org/cdimage/weekly-builds/amd64/iso-cd/debian-testing-amd64-netinst.iso"
boot_file_src_checksum=$(get_debian_testing_weekly_md5 "amd64")
#boot_file_src="http://cdimage.debian.org/cdimage/daily-builds/daily/arch-latest/amd64/iso-cd/debian-testing-amd64-netinst.iso"
#boot_file_src_checksum=$(get_debian_testing_daily_md5 "amd64")
boot_wait=10
kickstart_port=${KS_PORT:-7003}
kickstart_timeout=7200
ssh_host_port=${SSH_PORT:-2003}
ssh_user="vagrant"
ssh_priv_key="vagrant_key"
ssh_priv_key_src="https://raw.github.com/mitchellh/vagrant/master/keys/vagrant"
update_launch=(
    "sudo bash virtualbox.sh"
    "sudo bash -c 'apt-get -y update && apt-get -y dist-upgrade && apt-get -y autoremove && apt-get -y clean'"
)
update_transport=("postinstall/virtualbox.sh")
clean_transported=1
shutdown_cmd="sudo /sbin/halt -h -p"
shutdown_timeout=20
files_to_autoupdate_vbox_version=(
    "postinstall/adm_envrc"
    "validate/adm_envrc"
)
